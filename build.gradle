plugins {
    id 'fabric-loom' version '1.2-SNAPSHOT' apply(false)
    id 'net.minecraftforge.gradle' version '[6.0,6.2)' apply(false)
    id 'org.quiltmc.loom' version '1.2.+' apply(false)
    id 'org.spongepowered.gradle.vanilla' version '0.2.1-SNAPSHOT' apply(false)
    id("org.spongepowered.mixin") version "0.7-SNAPSHOT" apply(false)
    id 'org.parchmentmc.librarian.forgegradle' version '1.+' apply(false)
    id 'com.matyrobbrt.mc.registrationutils' version "${registration_utils}"
    id 'org.groovymc.modsdotgroovy' version "${mods_dot_groovy_version}"
}

registrationUtils {
    group 'dhyces.modhelper.registration'
    projects {
        Fabric { type 'fabric' }
        Quilt { type 'fabric' }
        Forge { type 'forge' }
        Common { type 'common' }
    }
}

modsDotGroovy {
    dslVersion = "${dsl_version}"
    platform 'multiloader'
    multiloader {
        common = project(':Common')
        quilt = [project(':Quilt')]
        forge = [project(':Forge')]
        fabric = [project(':Fabric')]
    }
}

allprojects {
    ext {
        parchmentMcVersion  = parchment_mc_version.isEmpty() ? mc_version : parchment_mc_version
    }
}

subprojects {
    apply plugin: 'java'

    java.toolchain.getLanguageVersion().set(JavaLanguageVersion.of(17))
    java.withSourcesJar()
    java.withJavadocJar()
        
    jar {
        from(rootProject.file("LICENSE")) {
            rename { "${it}_${mod_name}" }
        }
        manifest {
            attributes([
                'Specification-Title'     : mod_name,
                'Specification-Vendor'    : mod_author,
                'Specification-Version'   : project.jar.archiveVersion,
                'Implementation-Title'    : project.name,
                'Implementation-Version'  : project.jar.archiveVersion,
                'Implementation-Vendor'   : mod_author,
                'Implementation-Timestamp': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                'Timestamp'               : System.currentTimeMillis(),
                'Built-On-Java'           : "${System.getProperty('java.vm.version')} (${System.getProperty('java.vm.vendor')})",
                'Built-On-Minecraft'      : mc_version
            ])
        }
    }

    sourcesJar {
        from(rootProject.file("LICENSE")) {
            rename { "${it}_${mod_name}" }
        }
    }

    repositories {
        mavenCentral()
        mavenLocal()
        maven {
            name = 'Sponge / Mixin'
            url = 'https://repo.spongepowered.org/repository/maven-public/'
        }
        maven {
            name = 'BlameJared Maven (CrT / Bookshelf)'
            url = 'https://maven.blamejared.com'
        }
    }

    dependencies {
        compileOnly 'org.jetbrains:annotations:24.0.0'
    }

    processResources {
        filesMatching(['pack.mcmeta', 'fabric.mod.json', 'mods.toml', '*.mixins.json']) {
            expand project.properties
        }
    }

    tasks.withType(JavaCompile).configureEach {
        it.options.encoding = 'UTF-8'
        it.options.getRelease().set(17)
    }

    // Disables Gradle's custom module metadata from being published to maven. The
    // metadata includes mapped dependencies which are not reasonably consumable by
    // other mod developers.
    tasks.withType(GenerateModuleMetadata).configureEach {
        enabled = false
    }
}
